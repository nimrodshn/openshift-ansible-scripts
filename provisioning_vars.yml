---

openshift_disable_check: disk_availability,docker_storage,memory_availability,package_version,docker_image_availability
ansible_ssh_user: root
deployment_type: openshift-enterprise
openshift_docker_additional_registries: registry.access.redhat.com
openshift_master_cluster_method: native
openshift_master_api_port: 443
openshift_master_console_port: 443
openshift_docker_hosted_registry_insecure: false
osm_default_node_selector: 'type=compute'
openshift_docker_options: '--log-driver=json-file --log-opt max-size=50m'

#openshift_image_tag=v3.11
#openshift_release='3.11'

# cluster_id is deprecated in favor of openshift_clusterid
openshift_clusterid: app-sre-dev
openshift_aws_clusterid: app-sre-dev
openshift_master_cluster_hostname: internal.api.app-sre-dev.openshift.com
openshift_master_cluster_public_hostname: api.app-sre-dev.openshift.com
openshift_master_public_api_url: https://api.app-sre-dev.openshift.com
openshift_master_public_console_url: https://console.app-sre-dev.openshift.com/console
oreg_url: registry.reg-aws.openshift.com:443/openshift3/ose-${component}:${version}
oreg_auth_user: ops-prod-pull36
oreg_auth_password: XXXX

os_sdn_network_plugin_name: redhat/openshift-ovs-networkpolicy

openshift_master_dynamic_provisioning_enabled: true

osm_default_subdomain: 12ab.app-sre-dev.openshiftapps.com
openshift_master_default_subdomain: 12ab.app-sre-dev.openshiftapps.com

osm_custom_cors_origins:
- console.app-sre-dev.openshift.com
- api.app-sre-dev.openshift.com

openshift_cloudprovider_kind: aws
openshift_cloudprovider_aws_access_key: XXXX
openshift_cloudprovider_aws_secret_key: XXXX


#osm_controller_args={{ obg_osm_controller_args }}

openshift_master_identity_providers:
- name: deny_all
  login: true
  challenge: true
  kind: DenyAllPasswordIdentityProvider

openshift_master_named_certificates:
- keyfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.key
  certfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.crt 
  names:
  - api.app-sre-dev.openshift.com
  - console.app-sre-dev.openshift.com

openshift_install_examples: True


openshift_master_oauth_always_show_provider_selection: False
openshift_hosted_router_create_certificate: False

os_firewall_use_firewalld: false


openshift_master_portal_net: 10.120.0.0/16
#osm_cluster_network_cidr: 

# StorageClass Parameters

# Openshift Router
openshift_hosted_manage_router: true
openshift_hosted_router_selector: 'type=infra'
openshift_hosted_router_replicas: 3
openshift_hosted_router_registryurl: registry.reg-aws.openshift.com:443/openshift3/ose-${component}:${version}

openshift_hosted_routers:
- edits:
  - action: update
    key: 'spec.template.spec.containers[0].env'
    value:
      name: 'ROUTER_USE_PROXY_PROTOCOL'
      value: true
  name': router
  certificate:
    certfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.12ab.app-sre-dev.openshiftapps.com.crt
    keyfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.12ab.app-sre-dev.openshiftapps.com.key
    cafile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/chain.ca.crt
  replicas: 2
  images: registry.reg-aws.openshift.com:443/openshift3/ose-${component}:${version}
  namespace: default
  selector: type=infra
  serviceaccount: router
  ports:
  - 80:80
  - 443:443
  stats_port: 1936

# Openshift Registry
openshift_hosted_manage_registry: true
openshift_hosted_registry_storage_kind: object
openshift_hosted_registry_storage_provider: s3

openshift_hosted_registry_storage_s3_accesskey: XXXX
openshift_hosted_registry_storage_s3_secretkey: XXXX
openshift_hosted_registry_storage_s3_region: us-east-2
openshift_hosted_registry_storage_s3_bucket: oso-app-sre-dev-docker-registry

openshift_docker_hosted_registry_insecure: False

openshift_hosted_registry_selector: 'type=infra'
openshift_hosted_registry_routetermination: reencrypt
openshift_hosted_registry_registryurl: registry.reg-aws.openshift.com:443/openshift3/ose-${component}:${version}
openshift_hosted_registry_routehost: registry.app-sre-dev.openshift.com
openshift_hosted_registry_routecertificates: 
  keyfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.key
  certfile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.crt
  cafile: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/chain.ca.crt

openshift_hosted_registry_storage_s3_encrypt: false
openshift_hosted_registry_env_vars:
  REGISTRY_OPENSHIFT_REQUESTS_WRITE_MAXWAITINQUEUE: '2h'
  REGISTRY_OPENSHIFT_REQUESTS_WRITE_MAXRUNNING': '256'

# Openshift Registry Console
# We always install it, this lets us change where it pulls its image from
osm_use_cockpit: false
openshift_cockpit_deployer_prefix: registry.reg-aws.openshift.com:443/openshift3/


# Openshift Web Console
openshift_web_console_install: true
openshift_web_console_prefix: registry.reg-aws.openshift.com:443/openshift3/ose-

# Openshift Ansible Service Broker
openshift_ansible_service_broker_install: true
ansible_service_broker_image_prefix: registry.reg-aws.openshift.com:443/openshift3/ose-

# Openshift Openshift Service Catalog
openshift_enable_service_catalog: true
openshift_service_catalog_image_prefix: registry.reg-aws.openshift.com:443/openshift3/ose-

# Openshift Template Service Broker
openshift_template_service_broker_install: true
template_service_broker_prefix: registry.reg-aws.openshift.com:443/openshift3/ose-
template_service_broker_selector:
  type: infra

# Openshift Prometheus
openshift_hosted_prometheus_deploy: true

# Not sure if this is needed
# Openshift Management (CloudForms)
openshift_management_install_management: false

# Openshift Logging
openshift_hosted_logging_deploy: true
openshift_logging_install_logging: true
openshift_hosted_logging_elasticsearch_cluster_size: 3
openshift_hosted_logging_deployer_version: v3.11
openshift_logging_image_version: v3.11
openshift_logging_image_prefix: registry.reg-aws.openshift.com:443/openshift3/

openshift_logging_kibana_env_vars:
  ELASTICSEARCH_REQUESTTIMEOUT: 600000
openshift_logging_kibana_nodeselector:
  type: infra

openshift_logging_curator_memory_limit: 512Mi
openshift_logging_kibana_memory_limit: 1Gi
openshift_logging_curator_nodeselector:
  type: infra
openshift_logging_es_number_of_shards: 1
openshift_logging_curator_default_days: 14
openshift_logging_use_ops: False
openshift_logging_curator_script_log_level: INFO
openshift_logging_fluentd_cpu_request: 100m
openshift_logging_es_cluster_size: 3
openshift_logging_kibana_proxy_memory_limit: 256Mi
openshift_logging_es_pvc_dynamic: True
openshift_logging_es_number_of_replicas: 1
openshift_logging_es_pvc_size: 500Gi
openshift_logging_elasticsearch_kibana_index_mode: shared_ops
openshift_logging_fluentd_nodeselector:
  logging-infra-fluentd: true
openshift_logging_kibana_hostname: logs.app-sre-dev.openshift.com
openshift_logging_kibana_cpu_request: 25m
openshift_logging_kibana_replica_count: 1
openshift_logging_image_prefix: registry.reg-aws.openshift.com:443/openshift3/ose-
openshift_logging_fluentd_hosts: []
openshift_logging_kibana_proxy_cpu_request: 25m
openshift_logging_namespace: logging
openshift_logging_fluentd_memory_limit: 512Mi
openshift_logging_master_public_url: https://api.app-sre-dev.openshift.com
openshift_logging_curator_log_level: WARN
openshift_logging_es_memory_limit: 12Gi
openshift_logging_es_cpu_request: 375m
openshift_logging_curator_cpu_request: 25m
openshift_logging_es_nodeselector:
  type: infra
openshift_logging_elasticsearch_proxy_memory_limit: 256Mi

openshift_logging_kibana_cert: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.crt
openshift_logging_kibana_key: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.key
openshift_logging_kibana_ca: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/chain.ca.crt

# Openshift Metrics
openshift_hosted_metrics_deploy: true
openshift_metrics_install_metrics: true
openshift_hosted_metrics_storage_kind: dynamic
openshift_metrics_image_prefix: registry.reg-aws.openshift.com:443/openshift3/
openshift_metrics_hawkular_hostname: metrics.app-sre-dev.openshift.com
openshift_metrics_startup_timeout: 500
openshift_metrics_hawkular_limits_memory: 3Gi
openshift_metrics_heapster_limits_memory: 3.75Gi
openshift_metrics_resolution: 30s
openshift_metrics_project: openshift-infra
openshift_metrics_hawkular_nodeselector:
  type: infra
openshift_metrics_heapster_requests_memory: 3.75Gi
openshift_metrics_cassandra_limits_memory: 4Gi
openshift_metrics_cassandra_replicas: 3
openshift_metrics_heapster_standalone: False
openshift_metrics_hawkular_requests_memory: 3Gi
openshift_metrics_heapster_requests_cpu: 100m
openshift_metrics_duration: 7
openshift_metrics_cassandra_requests_cpu: 375m
openshift_metrics_cassandra_storage_type: dynamic
openshift_metrics_cassandra_requests_memory: 4Gi
openshift_metrics_cassandra_nodeselector={u'type': u'infra'}
  type: infra
openshift_metrics_hawkular_requests_cpu: 100m
openshift_metrics_heapster_nodeselector:
  type: infra
openshift_metrics_cassandra_pvc_size: 100Gi
openshift_metrics_hawkular_replicas: 1

openshift_metrics_image_version: v3.11
openshift_metrics_hawkular_ca: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/chain.ca.crt
openshift_metrics_hawkular_cert: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.crt
openshift_metrics_hawkular_key: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.key

# let's install OLM
operator_lifecycle_manager_install: true

# Variables that are commented in this file are optional; uncommented variables
# are mandatory.

# Default values for each variable are provided, as applicable.
# Example values for mandatory variables are provided as a comment at the end
# of the line.

# ------------------------ #
# Common/Cluster Variables #
# ------------------------ #
# Variables in this section affect all areas of the cluster

# Deployment type must be specified.
openshift_deployment_type: 'openshift-enterprise'

# This will be dependent on the version provided by the yum repository
#openshift_pkg_version: # -3.10.0

# OpenShift api port
# Fulfills a chicken/egg scenario with how Ansible treats host inventory file
# and extra_vars.  This is used for SecurityGroups, ELB Listeners as well as
# an override to installer inventory openshift_master_api_port key
openshift_master_api_port: 443

# specify a clusterid
# This value is also used as the default value for many other components.
openshift_aws_clusterid: app-sre-dev

# AWS region
# This value will instruct the plays where all items should be created.
# Multi-region deployments are not supported using these plays at this time.
openshift_aws_region: us-east-2

openshift_aws_create_launch_config: true
openshift_aws_create_scale_group: true
openshift_aws_create_iam_role: true
openshift_aws_create_dns: true
openshift_aws_custom_dns_provider_role: /home/mwoodson/test_ansible/oa_sre_dns
openshift_aws_dns_provider: custom
openshift_clusterid: app-sre-dev
openshift_master_default_subdomain: 12ab.app-sre-dev.openshiftapps.com
openshift_master_bootstrap_auto_approve: true

# --- #
# VPC #
# --- #

# openshift_aws_create_vpc defaults to true.  If you don't wish to provision
# a vpc, set this to false.
#openshift_aws_create_vpc: true

# when openshift_aws_create_vpc is true (the default), the VPC defined in
# openshift_aws_vpc will be created
openshift_aws_vpc:
  name: "{{ openshift_aws_vpc_name }}"
  cidr: 172.35.0.0/16
  subnets:
    us-east-2:
    - cidr: 172.35.48.0/20
      az: "us-east-2a"
    - cidr: 172.35.32.0/20
      az: "us-east-2b"
    - cidr: 172.35.16.0/20
      az: "us-east-2c"

# Name of the vpc.  Needs to be set if using a pre-existing vpc.
openshift_aws_vpc_name: "{{ openshift_aws_clusterid }}"

# Name of the subnet in the vpc to use.  Needs to be set if using a pre-existing
# vpc + subnet. Otherwise will use the subnet with 'default_az' set (see above
# example VPC structure)
#openshift_aws_subnet_az:

# -------------- #
# Security Group #
# -------------- #

# openshift_aws_create_security_groups defaults to true.  If you wish to use
# an existing security group, set this to false.
openshift_aws_create_security_groups: true

# openshift_aws_build_ami_group is the name of the security group to build the
# ami in.  This defaults to the value of openshift_aws_clusterid.
#openshift_aws_build_ami_group: "{{ openshift_aws_clusterid }}"

# openshift_aws_launch_config_security_groups specifies the security groups to
# apply to the launch config.  The launch config security groups will be what
# the cluster actually is deployed in.
#openshift_aws_launch_config_security_groups: see roles/openshift_aws/defaults.yml

# openshift_aws_node_security_groups are created when
# openshift_aws_create_security_groups is set to true.
#openshift_aws_node_security_groups: see roles/openshift_aws/defaults.yml

# -------- #
# ssh keys #
# -------- #

# Specify the key pair name here to connect to the provisioned instances.  This
# can be an existing key, or it can be one of the keys specified in
# openshift_aws_users
openshift_aws_ssh_key_name: mwoodson_key

# This will ensure these user and public keys are created.
#openshift_aws_users:
#- key_name: myuser_key
#  username: myuser
#  pub_key: |
#         ssh-rsa AAAA

# When building the AMI, specify the user to ssh to the instance as.
# openshift_aws_build_ami_ssh_user: root

# --------- #
# AMI Build #
# --------- #
# Variables in this section apply to building a node AMI for use in your
# openshift cluster.
# openshift-ansible will perform the container runtime storage setup when specified
# The current storage setup with require a drive if using a separate storage device
# for the container runtime.
container_runtime_docker_storage_type: overlay2
container_runtime_docker_storage_setup_device: /dev/xvdb

# must specify a base_ami when building an AMI
openshift_aws_base_ami: # ami-12345678

# when creating an encrypted AMI please specify use_encryption
#openshift_aws_ami_encrypt: False

# -- #
# S3 #
# -- #

# Create an s3 bucket.
openshift_aws_create_s3: True

# --- #
# ELB #
# --- #

# openshift_aws_elb_name will be the base-name of the ELBs.
openshift_aws_elb_name: "{{ openshift_aws_clusterid }}"

# custom certificates are required for the ELB
openshift_aws_iam_cert_name: app-sre-dev
openshift_aws_iam_cert_path: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.crt
openshift_aws_iam_cert_key_path: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/wildcard.app-sre-dev.openshift.com.key
openshift_aws_iam_cert_chain_path: /home/mwoodson/git/openshift-ansible-private/private_roles/stat_cert_files/files/app-sre-dev/chain.ca.crt


# oa_* vars are vars that we create so we don't have to copy everything around
oa_default_openshift_node_group_edits:
- key: kubeletArguments.system-reserved
  value:
  - 'cpu=1000m,memory=1Gi'
- key: kubeletArguments.image-gc-high-threshold
  value:
  - '80'
- key: kubeletArguments.image-gc-low-threshold
  value:
  - '60'
- key: kubeletArguments.maximum-dead-containers
  value:
  - '50'
- key: kubeletArguments.maximum-dead-containers-per-container
  value:
  - '2'
- key: kubeletArguments.minimum-container-ttl-duration
  value:
  - 5m

oa_default_openshift_node_group_crio_edits:
- key: kubeletArguments.container-runtime
  value:
  - remote
- key: kubeletArguments.container-runtime-endpoint
  value:
  - /var/run/crio/crio.sock
- key: kubeletArguments.image-service-endpoint
  value:
  - /var/run/crio/crio.sock
- key: kubeletArguments.runtime-request-timeout
  value:
  - 10m
- key: networkConfig.mtu
  value: 8951

openshift_node_groups:
- name: node-config-master
  labels:
  - 'node-role.kubernetes.io/master=true'
  - 'type=master'
  - "region=us-east-2"
  - 'logging-infra-fluentd=true'
  edits: "{{ oa_default_openshift_node_group_edits }}"
- name: node-config-infra
  labels:
  - 'node-role.kubernetes.io/infra=true'
  - 'type=infra'
  - "region=us-east-2"
  - 'logging-infra-fluentd=true'
  edits: "{{ oa_default_openshift_node_group_edits }}"
- name: node-config-compute
  labels:
  - 'node-role.kubernetes.io/compute=true'
  - 'type=compute'
  - "region=us-east-2"
  - 'logging-infra-fluentd=true'
  edits: "{{ oa_default_openshift_node_group_edits }}"
#- name: node-config-compute-crio
#  labels:
#  - 'node-role.kubernetes.io/compute=true'
#  - 'type=compute'
#  - "region=us-east-2"
#  - 'runtime=cri-o'
#  - 'logging-infra-fluentd=true'
#  edits: "{{ oa_default_openshift_node_group_crio_edits + oa_default_openshift_node_group_edits }}"

openshift_aws_node_groups:
- name: "{{ openshift_aws_clusterid }} compute"
  group: compute
  node_group_config: node-config-compute
  tags:
    host-type: node
    sub-host-type: compute
    runtime: docker
    environment: stg
    scalegroup: 'True'
    config: 'False'
#- name: "{{ openshift_aws_clusterid }} compute CRI-O"
#  group: compute-crio
#  node_group_config: node-config-compute-crio
#  tags:
#    group: a
#    host-type: node
#    sub-host-type: compute
#    runtime: cri-o
#    environment: stg
#    scalegroup: 'True'
#    config: 'False'
- name: "{{ openshift_aws_clusterid }} INFRA"
  group: infra
  node_group_config: node-config-infra
  tags:
    host-type: node
    sub-host-type: infra
    runtime: docker
    environment: stg
    scalegroup: 'True'
    config: 'False'

openshift_aws_node_group_config_node_volumes:
- device_name: /dev/sda1
  volume_size: 50
  device_type: gp2
  delete_on_termination: True
- device_name: /dev/sdb
  volume_size: 200
  device_type: gp2
  delete_on_termination: True

openshift_aws_node_group_config:
#  compute-crio:
#    instance_type: m4.xlarge
#    volumes: "{{ openshift_aws_node_group_config_node_volumes }}"
#    health_check:
#      period: 60
#      type: EC2
#    min_size: 2
#    max_size: 10
#    desired_size: 6
#    termination_policy: "{{ openshift_aws_node_group_termination_policy }}"
#    replace_all_instances: "{{ openshift_aws_node_group_replace_all_instances }}"
#    iam_role: "{{ openshift_aws_iam_role_name }}"
#    policy_name: "{{ openshift_aws_iam_role_policy_name }}"
#    policy_json: "{{ openshift_aws_iam_role_policy_json }}"
  compute:
    instance_type: m4.xlarge
    volumes: "{{ openshift_aws_node_group_config_node_volumes }}"
    health_check:
      period: 60
      type: EC2
    min_size: 2
    max_size: 10
    desired_size: 6
    termination_policy: "{{ openshift_aws_node_group_termination_policy }}"
    replace_all_instances: "{{ openshift_aws_node_group_replace_all_instances }}"
    iam_role: "{{ openshift_aws_iam_role_name }}"
    policy_name: "{{ openshift_aws_iam_role_policy_name }}"
    policy_json: "{{ openshift_aws_iam_role_policy_json }}"
  infra:
    instance_type: r4.xlarge
    volumes: "{{ openshift_aws_node_group_config_node_volumes }}"
    health_check:
      period: 60
      type: EC2
    min_size: 2
    max_size: 3
    desired_size: 3
    termination_policy: "{{ openshift_aws_node_group_termination_policy }}"
    replace_all_instances: "{{ openshift_aws_node_group_replace_all_instances }}"
    iam_role: "{{ openshift_aws_iam_role_name }}"
    policy_name: "{{ openshift_aws_iam_role_policy_name }}"
    policy_json: "{{ openshift_aws_iam_role_policy_json }}"
    elbs: "{{ openshift_aws_elb_dict | json_query('infra.[*][0][*].name') }}"

openshift_aws_launch_config_security_groups:
  master:
  - "{{ openshift_aws_clusterid }}"  # default sg
  - "{{ openshift_aws_clusterid }}_master"  # node type sg
  - "{{ openshift_aws_clusterid }}_master_k8s"  # node type sg k8s
  compute:
  - "{{ openshift_aws_clusterid }}"  # default sg
  - "{{ openshift_aws_clusterid }}_compute"  # node type sg
  - "{{ openshift_aws_clusterid }}_compute_k8s"  # node type sg k8s
  infra:
  - "{{ openshift_aws_clusterid }}"  # default sg
  - "{{ openshift_aws_clusterid }}_infra"  # node type sg
  - "{{ openshift_aws_clusterid }}_infra_k8s"  # node type sg k8s
  compute-crio:
  - "{{ openshift_aws_clusterid }}"  # default sg
  - "{{ openshift_aws_clusterid }}_compute"  # node type sg
  - "{{ openshift_aws_clusterid }}_compute_k8s"  # node type sg k8s

openshift_aws_ami: ami-041a7869cb1e50fc1

openshift_aws_ami_map:
  master: "{{ openshift_aws_ami }}"
  infra: "{{ openshift_aws_ami }}"
  compute: "{{ openshift_aws_ami }}"
  compute-crio: "{{ openshift_aws_ami }}"

openshift_aws_master_group_instance_type: m4.xlarge

openshift_aws_master_volumes:
- device_name: /dev/sda1
  volume_size: 100
  volume_type: gp2
  delete_on_termination: False
- device_name: /dev/sdb
  volume_size: 200
  volume_type: gp2
  delete_on_termination: False


openshift_aws_master_instance_config:
  instance_type: "{{ openshift_aws_master_group_instance_type | default(openshift_aws_instance_type) }}"
  volumes: "{{ openshift_aws_master_volumes }}"
  health_check: "{{ openshift_aws_scale_group_health_check }}"
  exact_count: "{{ openshift_aws_master_group_desired_size | default(3) }}"
  termination_policy: "{{ openshift_aws_node_group_termination_policy }}"
  iam_role: "{{ openshift_aws_iam_master_role_name | default(openshift_aws_iam_role_name) }}"
  policy_name: "{{ openshift_aws_iam_master_role_policy_name | default(openshift_aws_iam_role_policy_name) }}"
  policy_json: "{{ openshift_aws_iam_master_role_policy_json | default(openshift_aws_iam_role_policy_json) }}"
  elbs: "{{ openshift_aws_elb_dict | json_query('master.[*][0][*].name') }}"
  groups:
  - "{{ openshift_aws_clusterid }}"  # default sg
  - "{{ openshift_aws_clusterid }}_master"  # node type sg
  - "{{ openshift_aws_clusterid }}_master_k8s"  # node type sg k8s
